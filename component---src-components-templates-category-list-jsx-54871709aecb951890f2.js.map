{"version":3,"sources":["webpack:///./src/components/templates/CategoryList.jsx"],"names":["HeaderImage","styled","Image","CategoryList","location","pageContext","data","category","siteTitle","site","siteMetadata","title","headerImagePath","activeMenu","subTitle","keywords","fluid","allMarkdownRemark","edges","pageListSize","path","pathCase","pageQuery"],"mappings":"4OAWMA,EAAcC,YAAOC,KAAV,4EAAGD,CAAH,gCA+BFE,UA1BM,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACrCC,EAAaF,EAAbE,SACFC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAkB,IAAIN,EAAM,8BAElC,OACE,kBAAC,IAAD,CACEO,WAAYN,EACZH,SAAUA,EACVU,SAAUP,EACVI,MAAOH,GAEP,6BACE,kBAAC,IAAD,CAAKO,SAAU,CAACR,GAAWI,MAAOJ,IACjCK,GAAmB,kBAACZ,EAAD,CAAagB,MAAOJ,IACxC,kBAAC,IAAD,CACEN,KAAMA,EAAKW,kBAAkBC,MAC7Bb,YAAaA,EACbc,aAAcb,EAAKG,KAAKC,aAAaS,aACrCC,KAAI,IAAMC,mBAASd,QAStB,IAAMe,EAAS","file":"component---src-components-templates-category-list-jsx-54871709aecb951890f2.js","sourcesContent":["import { graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { get } from 'lodash';\nimport { pathCase } from 'nodeUtil';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport PostList from '../PostList';\nimport SEO from '../SEO';\nimport Layout from './Layout';\n\nconst HeaderImage = styled(Image)`\n  margin: 0 auto;\n  width: 240px;\n`;\n\nconst CategoryList = ({ location, pageContext, data }) => {\n  const { category } = pageContext;\n  const siteTitle = data.site.siteMetadata.title;\n  const headerImagePath = get(data, 'file.childImageSharp.fluid');\n\n  return (\n    <Layout\n      activeMenu={category}\n      location={location}\n      subTitle={category}\n      title={siteTitle}\n    >\n      <div>\n        <SEO keywords={[category]} title={category} />\n        {headerImagePath && <HeaderImage fluid={headerImagePath} />}\n        <PostList\n          data={data.allMarkdownRemark.edges}\n          pageContext={pageContext}\n          pageListSize={data.site.siteMetadata.pageListSize}\n          path={`/${pathCase(category)}`}\n        />\n      </div>\n    </Layout>\n  );\n};\n\nexport default CategoryList;\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!, $category: String!, $categoryCover: String) {\n    file(relativePath: { eq: $categoryCover }) {\n      childImageSharp {\n        fluid(maxWidth: 240) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        pageListSize\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { category: { eq: $category } } }\n      skip: $skip\n      limit: $limit\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            category\n            slug\n          }\n          excerpt(format: MARKDOWN)\n          frontmatter {\n            cover {\n              childImageSharp {\n                fixed(width: 120, height: 120) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}