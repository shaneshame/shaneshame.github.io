{"version":3,"sources":["webpack:///./src/components/RecentPostList/RecentPostItem.jsx","webpack:///./src/components/RecentPostList/RecentPostList.jsx","webpack:///./src/components/RecentPostList/index.js","webpack:///./src/components/TagList/TagButton.jsx","webpack:///./src/components/TagList/TagList.jsx","webpack:///./src/components/TagList/index.js","webpack:///./src/components/templates/BlogPost.jsx"],"names":["Container","styled","div","props","display","Cover","Link","image","theme","recentpostitem","text","RecentPostItem","data","link","node","fields","slug","frontmatter","cover","childImageSharp","fixed","src","to","line","title","date","recentpostlist","header","category","RecentPostList","id","map","index","key","StyledLink","StyledButton","span","tag","back","TagButton","children","TagList","PostHeader","blogpost","hr","info","PostContent","content","default","quote","PostFooter","pageQuery","BlogPost","location","pageContext","post","markdownRemark","tags","siteTitle","site","siteMetadata","recent","Layout","activeMenu","SEO","description","excerpt","fluid","keywords","className","dangerouslySetInnerHTML","__html","html"],"mappings":"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","file":"component---src-components-templates-blog-post-jsx-a9b689dbcd5af556c014.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { TextEllipsis } from '../common';\n\nconst Container = styled.div`\n  padding: 0 10px 10px 10px;\n  width: 100%;\n\n  @media all and (min-width: 992px) {\n    display: ${props => props.display || 'inline-block'};\n    width: 25%;\n  }\n`;\n\nconst Cover = styled(Link)`\n  background-image: url(${props => props.image});\n  background-position: 50% 50%;\n  background-size: cover;\n  border-radius: 10px;\n  display: inline-block;\n  height: 100px;\n  margin: 0 !important;\n  width: 100%;\n\n  &:hover {\n    text-decoration: underline #fff;\n  }\n\n  div {\n    background-color: rgba(0, 0, 0, 0.6);\n    border-radius: inherit;\n    color: ${props => props.theme.recentpostitem.text};\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: flex-end;\n    padding: 10px;\n\n    p {\n      font-weight: bold;\n    }\n\n    span {\n      font-size: 12px;\n    }\n  }\n\n  @media all and (min-width: 992px) {\n    height: 120px;\n  }\n`;\n\nconst RecentPostItem = ({ data }) => {\n  const link = data.node.fields.slug;\n  const node = data.node.frontmatter;\n  const image = !!node.cover ? node.cover.childImageSharp.fixed.src : '';\n\n  return (\n    <Container>\n      <Cover image={image} to={link}>\n        <div>\n          <TextEllipsis line={2} text={node.title} />\n          <span>{node.date}</span>\n        </div>\n      </Cover>\n    </Container>\n  );\n};\n\nexport default RecentPostItem;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport RecentPostItem from './RecentPostItem';\n\nconst Container = styled.div`\n  #title {\n    color: ${props => props.theme.recentpostlist.header};\n    font-weight: bold;\n    margin: 0;\n    padding: 0 10px 10px 10px;\n\n    a {\n      color: ${props => props.theme.recentpostlist.category};\n\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n`;\n\nconst RecentPostList = ({ category, data }) => {\n  return (\n    <Container>\n      <div id=\"title\">\n        Recent \"<Link to={`/${category}`}>{category}</Link>\" Posts\n      </div>\n      {data.map((node, index) => (\n        <RecentPostItem data={node} key={index} />\n      ))}\n    </Container>\n  );\n};\n\nexport default RecentPostList;\n","import RecentPostList from './RecentPostList';\n\nexport default RecentPostList;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  margin: 5px 10px 5px 0;\n`;\n\nconst StyledButton = styled.span`\n  background-color: ${props => props.theme.tag.back};\n  border-radius: 5px;\n  color: ${props => props.theme.tag.text};\n  font-size: 15px;\n  padding: 5px 10px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst TagButton = ({ children, link }) => {\n  return (\n    <StyledLink to={`/${link}`}>\n      <StyledButton>{children}</StyledButton>\n    </StyledLink>\n  );\n};\n\nexport default TagButton;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport TagButton from './TagButton';\n\nconst Container = styled.div``;\n\nconst TagList = ({ data }) => {\n  return (\n    <Container>\n      {data &&\n        data.map(node => (\n          <TagButton key={node} link={`tags/${node}`}>\n            #{node}\n          </TagButton>\n        ))}\n    </Container>\n  );\n};\n\nexport default TagList;\n","import TagList from './TagList';\n\nexport default TagList;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { PostInfo } from '../common';\nimport RecentPostList from '../RecentPostList';\nimport SEO from '../SEO';\nimport TagList from '../TagList';\nimport Layout from './Layout';\n\nconst PostHeader = styled.div`\n  h1 {\n    border: none;\n    color: ${props => props.theme.blogpost.title};\n    margin-bottom: 10px;\n    padding: 0;\n  }\n\n  hr {\n    background-color: ${props => props.theme.blogpost.hr};\n    margin: 20px 0 40px 0;\n  }\n\n  div {\n    color: ${props => props.theme.blogpost.info};\n\n    #circle {\n      background-color: ${props => props.theme.blogpost.info};\n    }\n  }\n`;\n\nconst PostContent = styled.div`\n  color: ${props => props.theme.blogpost.content.default};\n\n  a {\n    color: ${props => props.theme.blogpost.content.link};\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .gatsby-highlight {\n    border-radius: 10px;\n    margin: 24px 0;\n\n    pre[class*='language-'] {\n      padding: 10px 15px;\n    }\n  }\n\n  blockquote {\n    border-left: 4px solid ${props => props.theme.blogpost.content.quote};\n    color: ${props => props.theme.blogpost.content.quote};\n    margin-left: 0;\n    margin-right: 0;\n    padding-left: calc(0.8125rem - 1px);\n  }\n`;\n\nconst PostFooter = styled.div`\n  margin-top: 40px;\n\n  hr {\n    background-color: ${props => props.theme.blogpost.hr};\n    margin: 20px 0;\n  }\n`;\n\nconst BlogPost = ({ data, location, pageContext }) => {\n  const post = data.markdownRemark;\n  const { title, date, tags, cover } = post.frontmatter;\n\n  const siteTitle = data.site.siteMetadata.title;\n\n  const { category, recent } = pageContext;\n\n  return (\n    <Layout activeMenu={category} location={location} title={siteTitle}>\n      <SEO\n        description={post.excerpt}\n        image={!!cover && cover.childImageSharp.fluid.src}\n        keywords={tags || []}\n        title={title}\n      />\n      <PostHeader>\n        <h1>{title}</h1>\n        <PostInfo category={category} date={date} link />\n        <hr />\n      </PostHeader>\n      <PostContent>\n        <div\n          className=\"markdown-body\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n      </PostContent>\n      <PostFooter>\n        <TagList data={tags} />\n        <hr />\n        {category && <RecentPostList category={category} data={recent} />}\n      </PostFooter>\n    </Layout>\n  );\n};\n\nexport default BlogPost;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($category: String!, $slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(\n      fields: { category: { eq: $category }, slug: { eq: $slug } }\n    ) {\n      excerpt(format: MARKDOWN)\n      fields {\n        category\n      }\n      frontmatter {\n        date(formatString: \"YYYY-MM-DD\")\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              src\n            }\n          }\n        }\n        tags\n        title\n      }\n      html\n      id\n    }\n  }\n`;\n"],"sourceRoot":""}