{"version":3,"sources":["webpack:///./src/pages/Spoonman.jsx"],"names":["windowSize","height","width","colors","Container","styled","div","InnerBox","ContentContainer","Title","h1","codeStyles","CodeInput","input","Code","pre","InfoLabel","b","Link","a","Label","label","MOTDUnfurlHeader","content","property","MOTD","useState","isSSR","setSSR","useEffect","className","split","map","letter","index","key","htmlFor","id","onClick","event","target","select","readOnly","value"],"mappings":"oNAOaA,EAAa,CACxBC,OAAQ,IACRC,MAAO,KAIHC,EAKE,UALFA,EAMM,UANNA,EAOQ,UAPRA,EAQa,UARbA,EASG,UATHA,EAYO,UAKPC,EAAYC,IAAOC,IAAV,sEAAGD,CAAH,6MACOF,GAgBhBI,EAAWF,IAAOC,IAAV,qEAAGD,CAAH,6TACEF,EAEeA,EAEpBA,EACCH,EAAWC,OAIZD,EAAWE,OAgBhBM,EAAmBH,IAAOC,IAAV,6EAAGD,CAAH,wGAQhBI,EAAQJ,IAAOK,GAAV,kEAAGL,CAAH,uUAQaF,GAuBlBQ,EAAU,gCACMR,EADN,qOAcVS,EAAYP,IAAOQ,MAAV,sEAAGR,CAAH,QACXM,GAGEG,EAAOT,IAAOU,IAAV,iEAAGV,CAAH,QACNM,GAGEK,EAAYX,IAAOY,EAAV,sEAAGZ,CAAH,+CACJF,GAKLe,EAAOb,IAAOc,EAAV,iEAAGd,CAAH,0EACCF,GAMLiB,EAAQf,IAAOgB,MAAV,kEAAGhB,CAAH,oHAQLiB,EAAmB,WACvB,OACE,kBAAC,SAAD,KACE,0BAAMC,QAAQ,wCAAwCC,SAAS,WAC/D,0BAAMD,QAAQ,sBAAsBC,SAAS,aAC7C,0BAAMD,QAAQ,sBAAsBC,SAAS,mBAC7C,0BAAMD,QAAQ,cAAcC,SAAS,iBACrC,0BAAMD,QAAQ,kCAAkCC,SAAS,eA4DhDC,UAvDF,WAAO,IAAD,EACOC,oBAAS,GADhB,WACVC,EADU,KACHC,EADG,KAOjB,OAJAC,qBAAU,WACRD,GAAO,KACN,IAGD,kBAACxB,EAAD,KACE,kBAACkB,EAAD,MACA,kBAACf,EAAD,CAAUuB,UAAU,UAClB,kBAACtB,EAAD,KACE,kBAACC,EAAD,KACG,QAAQsB,MAAM,IAAIC,KAAI,SAACC,EAAQC,GAAT,OACrB,0BAAMC,IAAKD,GAAQD,MAFvB,OAMA,kBAACf,EAAD,4BACA,kBAACE,EAAD,CAAOgB,QAAQ,qBACb,kBAACpB,EAAD,gBACCW,EACC,kBAACb,EAAD,CAAMuB,GAAG,qBAxLG,8BA0LZ,kBAACzB,EAAD,CACEyB,GAAG,oBACHC,QAAS,SAAAC,GACPA,EAAMC,OAAOC,UAEfC,UAAQ,EACRC,MAhMU,gCAoMhB,kBAACvB,EAAD,CAAOgB,QAAQ,YACb,kBAACpB,EAAD,kBACCW,EACC,kBAACb,EAAD,CAAMuB,GAAG,YAxMN,gBA0MH,kBAACzB,EAAD,CACEyB,GAAG,WACHC,QAAS,SAAAC,GACPA,EAAMC,OAAOC,UAEfC,UAAQ,EACRC,MAhNC","file":"component---src-pages-spoonman-jsx-4e5dc427e89376fd4880.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\n\nconst serverIP = '74.91.115.39';\nconst discordInviteLink = 'https://discord.gg/KH866DB';\n\nexport const windowSize = {\n  height: 400,\n  width: 400,\n};\n\n/* eslint-disable sort-keys */\nconst colors = {\n  brown: '#A52A2A',\n  darkBrown: '##661515',\n  darkBlue: '#7289DA',\n  darkBlueHover: '#677BC4',\n  gray: '#8e9297',\n  darkGray: '#2F3136',\n  darkerGray: '#17181a',\n  discordBlueLink: '#00B0F4',\n  green: '#008000',\n  darkGreen: '#005900',\n  darkerGreen: '#013301',\n  lightGray: '#36393F',\n  white: '#FFFFFF',\n};\n/* eslint-enable sort-keys */\n\nconst Container = styled.div`\n  background-color: ${colors.lightGray};\n  font-family: Tahoma, Geneva, sans-serif;\n  font-size: 16px;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  overflow-y: hidden;\n  position: relative;\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n`;\n\nconst InnerBox = styled.div`\n  background: ${colors.darkGray};\n  border-radius: 10px;\n  box-shadow: 20px 20px 47px ${colors.darkerGray}, -20px -20px 47px #474a52;\n  box-sizing: border-box;\n  color: ${colors.green};\n  height: ${windowSize.height}px;\n  opacity: 0;\n  padding: 1em;\n  position: relative;\n  width: ${windowSize.width}px;\n  top: 45%;\n  transition: opacity 0.2s ease;\n  transform: translateY(-50%);\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n\n  &.isOpen {\n    opacity: 1;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  position: absolute;\n  text-align: center;\n  left: 50%;\n  top: calc(50% - 0.5em);\n  transform: translate(-50%, -50%);\n`;\n\nconst Title = styled.h1`\n  border: none;\n  margin: 0;\n  padding: 0.5em 0 0.5em 0;\n  position: relative;\n  text-transform: uppercase;\n\n  &::before {\n    background-color: ${colors.gray};\n    bottom: 0;\n    content: '';\n    height: 1px;\n    left: 50%;\n    position: absolute;\n    transform: translateX(-50%);\n    width: 50%;\n  }\n\n  span {\n    display: inline-block;\n    transition: transform 0.4s ease;\n  }\n\n  &:hover {\n    span {\n      filter: FlipH;\n      transform: scaleX(-1);\n    }\n  }\n`;\n\nconst codeStyles = `\n  background-color: ${colors.darkerGray};\n  border: none;\n  border-radius: 3px;\n  color: inherit;\n  cursor: input;\n  font-family: monospace, monospace;\n  font-size: 1rem;\n  line-height: 1.625rem;\n  padding: 0.35rem;\n  text-align: center;\n  width: 16rem;\n`;\n\nconst CodeInput = styled.input`\n  ${codeStyles}\n`;\n\nconst Code = styled.pre`\n  ${codeStyles}\n`;\n\nconst InfoLabel = styled.b`\n  color: ${colors.gray};\n  display: block;\n  margin-bottom: 2px;\n`;\n\nconst Link = styled.a`\n  color: ${colors.discordBlueLink};\n  display: inline-block;\n  margin: 1em 0;\n  text-transform: uppercase;\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-family: Tahoma, Geneva, sans-serif;\n  font-size: 0.9rem;\n  margin: 0.75rem 0;\n  text-transform: uppercase;\n`;\n\nconst MOTDUnfurlHeader = () => {\n  return (\n    <Helmet>\n      <meta content=\"https://shaneshame.github.io/Spoonman\" property=\"og:url\" />\n      <meta content=\"Spoonman TF2 Server\" property=\"og:title\" />\n      <meta content=\"Payload+ // Chicago\" property=\"og:description\" />\n      <meta content=\"Shane Shame\" property=\"og:site_name\" />\n      <meta content=\"static/screenshots/spoonman.png\" property=\"og:image\" />\n    </Helmet>\n  );\n};\n\nconst MOTD = () => {\n  const [isSSR, setSSR] = useState(true);\n\n  useEffect(() => {\n    setSSR(false);\n  }, []);\n\n  return (\n    <Container>\n      <MOTDUnfurlHeader />\n      <InnerBox className=\"isOpen\">\n        <ContentContainer>\n          <Title>\n            {'Spoon'.split('').map((letter, index) => (\n              <span key={index}>{letter}</span>\n            ))}\n            man\n          </Title>\n          <Link>Don't be an asshole</Link>\n          <Label htmlFor=\"discordInviteLink\">\n            <InfoLabel>Discord</InfoLabel>\n            {isSSR ? (\n              <Code id=\"discordInviteLink\">{discordInviteLink}</Code>\n            ) : (\n              <CodeInput\n                id=\"discordInviteLink\"\n                onClick={event => {\n                  event.target.select();\n                }}\n                readOnly\n                value={discordInviteLink}\n              />\n            )}\n          </Label>\n          <Label htmlFor=\"serverIP\">\n            <InfoLabel>Server IP</InfoLabel>\n            {isSSR ? (\n              <Code id=\"serverIP\">{serverIP}</Code>\n            ) : (\n              <CodeInput\n                id=\"serverIP\"\n                onClick={event => {\n                  event.target.select();\n                }}\n                readOnly\n                value={serverIP}\n              />\n            )}\n          </Label>\n        </ContentContainer>\n      </InnerBox>\n    </Container>\n  );\n};\n\nexport default MOTD;\n"],"sourceRoot":""}