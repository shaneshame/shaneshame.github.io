{"version":3,"sources":["webpack:///./src/components/templates/CategoryList.jsx","webpack:///./src/utils/util.js"],"names":["CategoryList","str","location","pageContext","data","category","Layout","activeMenu","title","SEO","keywords","toUpperCase","slice","upperFirst","toLowerCase","PostList","allMarkdownRemark","edges","page","pageListSize","site","siteMetadata","path","pageQuery"],"mappings":"gJACA,0CA6BeA,UAtBM,SAAC,GAAqC,ICJ9BC,EDILC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACrCC,EAAaF,EAAbE,SAER,OACE,kBAACC,EAAA,EAAD,CACEC,WAAYF,EACZH,SAAUA,EACVM,MAAK,aAAeH,GAEpB,6BACE,kBAACI,EAAA,EAAD,CAAKC,SAAU,CAACL,GAAWG,OCdNP,EDc0BI,OCd3B,IAACJ,MAAM,IAJT,SAACA,GACzB,YADsC,IAAbA,MAAM,IACzB,GAAIA,EAAI,GAAGU,cAAgBV,EAAIW,MAAM,GAGHC,CAAWZ,EAAIa,kBDejD,kBAACC,EAAA,EAAD,CACEX,KAAMA,EAAKY,kBAAkBC,MAC7BC,KAAMf,EACNgB,aAAcf,EAAKgB,KAAKC,aAAaF,aACrCG,KAAI,aAAejB,OAf7B,IAwBakB,EAAS","file":"component---src-components-templates-category-list-jsx-25b4b421cfac2909c7e5.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport { sentenceCase } from '../../utils/util';\nimport PostList from '../organisms/PostList';\nimport SEO from '../SEO';\nimport Layout from './Layout';\n\nconst CategoryList = ({ location, pageContext, data }) => {\n  const { category } = pageContext;\n\n  return (\n    <Layout\n      activeMenu={category}\n      location={location}\n      title={`Category: ${category}`}\n    >\n      <div>\n        <SEO keywords={[category]} title={sentenceCase(category)} />\n        <PostList\n          data={data.allMarkdownRemark.edges}\n          page={pageContext}\n          pageListSize={data.site.siteMetadata.pageListSize}\n          path={`/category/${category}`}\n        />\n      </div>\n    </Layout>\n  );\n};\n\nexport default CategoryList;\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!, $category: String) {\n    site {\n      siteMetadata {\n        pageListSize\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n      skip: $skip\n      limit: $limit\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(format: MARKDOWN)\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            category\n            tags\n            cover {\n              childImageSharp {\n                fixed(width: 120, height: 120) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","export const upperFirst = (str = '') => {\n  return `${str[0].toUpperCase()}${str.slice(1)}`;\n};\n\nexport const sentenceCase = (str = '') => upperFirst(str.toLowerCase());\n"],"sourceRoot":""}