{"version":3,"sources":["webpack:///./src/components/templates/TagsTemplate.jsx"],"names":["TagsTemplate","location","pageContext","data","tag","site","siteMetadata","pageListSize","title","subTitle","keywords","allMarkdownRemark","edges","path","pageQuery"],"mappings":"0FACA,gGAyBeA,UAnBM,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACrCC,EAAQF,EAARE,IADgD,EAExBD,EAAKE,KAAKC,aAAlCC,EAFgD,EAEhDA,aAAcC,EAFkC,EAElCA,MAEtB,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUQ,SAAQ,IAAML,EAAOI,MAAOA,GACtD,6BACE,kBAAC,IAAD,CAAKE,SAAU,CAACN,GAAMI,MAAK,QAAUJ,IACrC,kBAAC,IAAD,CACED,KAAMA,EAAKQ,kBAAkBC,MAC7BV,YAAaA,EACbK,aAAcA,EACdM,KAAI,SAAWT,OASlB,IAAMU,EAAS","file":"component---src-components-templates-tags-template-jsx-1ea01bea64b3b84fb9a3.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport PostList from '../PostList';\nimport SEO from '../SEO';\nimport Layout from './Layout';\n\nconst TagsTemplate = ({ location, pageContext, data }) => {\n  const { tag } = pageContext;\n  const { pageListSize, title } = data.site.siteMetadata;\n\n  return (\n    <Layout location={location} subTitle={`#${tag}`} title={title}>\n      <div>\n        <SEO keywords={[tag]} title={`Tag: ${tag}`} />\n        <PostList\n          data={data.allMarkdownRemark.edges}\n          pageContext={pageContext}\n          pageListSize={pageListSize}\n          path={`/tags/${tag}`}\n        />\n      </div>\n    </Layout>\n  );\n};\n\nexport default TagsTemplate;\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!, $tag: String) {\n    site {\n      siteMetadata {\n        pageListSize\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n      limit: $limit\n      skip: $skip\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(format: MARKDOWN)\n          frontmatter {\n            cover {\n              childImageSharp {\n                fixed(width: 120, height: 120) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}