{"version":3,"sources":["webpack:///./src/pages/SpoonMOTD.jsx"],"names":["colors","Container","styled","div","InnerBox","ContentContainer","Title","h1","codeStyles","CodeInput","input","Code","pre","Link","a","LinkButton","button","handleCopyToClipboard","text","navigator","permissions","query","name","then","result","state","clipboard","writeText","console","log","err","error","writeToClipboard","MOTD","useState","isSSR","setSSR","copyLinkState","setCopyLinkState","useEffect","split","map","letter","index","key","href","className","clsx","onClick","event","target","select","value"],"mappings":"8LAMMA,EACG,UADHA,EAEO,WAFPA,EAGM,UAHNA,EAIW,UAJXA,EAKM,UALNA,EAMQ,UANRA,EAOa,UAPbA,EAQG,UARHA,EASO,UATPA,EAUS,UAVTA,EAWO,UAXPA,EAYG,UAGHC,EAAYC,IAAOC,IAAV,uEAAGD,CAAH,yKACOF,GAchBI,EAAWF,IAAOC,IAAV,sEAAGD,CAAH,6RACEF,EAEeA,EAEpBA,GAiBLK,EAAmBH,IAAOC,IAAV,8EAAGD,CAAH,wGAQhBI,EAAQJ,IAAOK,GAAV,mEAAGL,CAAH,2KAkBLM,EAAU,gCACMR,EADN,6NAaVS,EAAYP,IAAOQ,MAAV,uEAAGR,CAAH,QACXM,GAGEG,EAAOT,IAAOU,IAAV,kEAAGV,CAAH,QACNM,GAGEK,EAAOX,IAAOY,EAAV,kEAAGZ,CAAH,0EACCF,GAMLe,EAAab,IAAOc,OAAV,wEAAGd,CAAH,+qBACMF,EAIXA,EAcaA,EACWA,EAKXA,EAGEA,EACWA,EAMbA,EAGEA,EACWA,GAkB/BiB,EAAwB,SAAAC,GAC5B,OAAOC,UAAUC,YACdC,MAAM,CAAEC,KAAM,oBACdC,MAAK,SAAAC,GACJ,GAAqB,YAAjBA,EAAOC,OAAwC,WAAjBD,EAAOC,MACvC,OAjBiB,SAAAP,GACvB,OAAOC,UAAUO,UAAUC,UAAUT,GAAMK,MACzC,WACEK,QAAQC,IAAI,+BAEd,SAAAC,GAEEF,QAAQG,MAAM,wBAAyBD,MAU9BE,CAAiBd,OA8DjBe,UAzDF,WAAO,IAAD,EACOC,oBAAS,GADhB,WACVC,EADU,KACHC,EADG,OAEyBF,qBAFzB,WAEVG,EAFU,KAEKC,EAFL,KAkBjB,OAJAC,qBAAU,WACRH,GAAO,KACN,IAGD,kBAACnC,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACG,QAAQkC,MAAM,IAAIC,KAAI,SAACC,EAAQC,GAAT,OACrB,0BAAMC,IAAKD,GAAQD,MAFvB,OAMA,kBAAC7B,EAAD,CAAMgC,KAAK,0CAAX,uBAGA,kBAAC9B,EAAD,CACE+B,UAAWC,YAAK,OAAGV,IAAkBA,IACrCW,QA7Ba,WACrB/B,EApLsB,8BAqLnBM,MAAK,WACJe,EAAiB,cAFrB,OAIS,WACLA,EAAiB,cAyBXD,EAEoB,YAAlBA,EACA,cACA,cAHA,gBAKLF,EACC,kBAACxB,EAAD,KAzNc,8BA2Nd,kBAACF,EAAD,CACEuC,QAAS,SAAAC,GACPA,EAAMC,OAAOC,UAEfC,MA/NY","file":"component---src-pages-spoon-motd-jsx-5ebf4c6d2f9e9f84e8ee.js","sourcesContent":["import clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst discordInviteLink = 'https://discord.gg/KH866DB';\n\nconst colors = {\n  brown: '#A52A2A',\n  darkBrown: '##661515',\n  darkBlue: '#7289DA',\n  darkBlueHover: '#677BC4',\n  darkGray: '#2F3136',\n  darkerGray: '#17181a',\n  discordBlueLink: '#00B0F4',\n  green: '#008000',\n  darkGreen: '#005900',\n  darkerGreen: '#013301',\n  lightGray: '#36393F',\n  white: '#FFFFFF',\n};\n\nconst Container = styled.div`\n  background-color: ${colors.lightGray};\n  font-family: Tahoma, Geneva, sans-serif;\n  font-size: 16px;\n  height: 100vh;\n  overflow-y: hidden;\n  position: relative;\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n`;\n\nconst InnerBox = styled.div`\n  background: ${colors.darkGray};\n  border-radius: 10px;\n  box-shadow: 20px 20px 47px ${colors.darkerGray}, -20px -20px 47px #474a52;\n  box-sizing: border-box;\n  color: ${colors.green};\n  height: 400px;\n  left: 50%;\n  margin: 0 auto;\n  padding: 1em;\n  position: absolute;\n  width: 400px;\n  top: 45%;\n  transform: translate(-50%, -50%);\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  position: absolute;\n  text-align: center;\n  left: 50%;\n  top: calc(50% - 0.5em);\n  transform: translate(-50%, -50%);\n`;\n\nconst Title = styled.h1`\n  margin: 0;\n  padding: 0.5em 0 0.5em 0;\n  text-transform: uppercase;\n\n  span {\n    display: inline-block;\n    transition: transform 0.4s ease;\n  }\n\n  &:hover {\n    span {\n      filter: FlipH;\n      transform: scaleX(-1);\n    }\n  }\n`;\n\nconst codeStyles = `\n  background-color: ${colors.darkerGray};\n  border: none;\n  color: inherit;\n  font-family: monospace, monospace;\n  font-size: 0.85rem;\n  line-height: 1.625rem;\n  margin-top: .75rem;\n  padding: 0.25rem 0.5rem;\n  text-align: center;\n  width: 14rem;\n`;\n\nconst CodeInput = styled.input`\n  ${codeStyles}\n`;\n\nconst Code = styled.pre`\n  ${codeStyles}\n`;\n\nconst Link = styled.a`\n  color: ${colors.discordBlueLink};\n  display: inline-block;\n  margin: 1em 0;\n  text-transform: uppercase;\n`;\n\nconst LinkButton = styled.button`\n  background-color: ${colors.darkBlue};\n  border: none;\n  border-radius: 3px;\n\n  color: ${colors.white};\n  cursor: pointer;\n  display: inline-block;\n  font-family: Impact, Charcoal, sans-serif;\n  font-size: 23px;\n  letter-spacing: 1.5px;\n  margin-top: 1em;\n  padding: 0.75em 1em;\n  text-decoration: none;\n  text-transform: uppercase;\n  transition: background-color 0.1s ease, box-shadow 0.2s ease;\n  width: 8.5em;\n\n  &:hover {\n    background-color: ${colors.darkBlueHover};\n    box-shadow: 0 12px 12px -6px ${colors.darkerGray}, 0 0 6px #474a52;\n    text-decoration: none;\n  }\n\n  &.success {\n    background-color: ${colors.darkGreen};\n\n    &:hover {\n      background-color: ${colors.darkerGreen};\n      box-shadow: 0 12px 12px -6px ${colors.darkerGray}, 0 0 6px #474a52;\n      text-decoration: none;\n    }\n  }\n\n  &.error {\n    background-color: ${colors.brown};\n\n    &:hover {\n      background-color: ${colors.darkBrown};\n      box-shadow: 0 12px 12px -6px ${colors.darkerGray}, 0 0 6px #474a52;\n      text-decoration: none;\n    }\n  }\n`;\n\nconst writeToClipboard = text => {\n  return navigator.clipboard.writeText(text).then(\n    () => {\n      console.log('Text copied to clipboard');\n    },\n    err => {\n      // This can happen if the user denies clipboard permissions:\n      console.error('Could not copy text: ', err);\n    }\n  );\n};\n\nconst handleCopyToClipboard = text => {\n  return navigator.permissions\n    .query({ name: 'clipboard-write' })\n    .then(result => {\n      if (result.state === 'granted' || result.state === 'prompt') {\n        return writeToClipboard(text);\n      }\n    });\n};\n\nconst MOTD = () => {\n  const [isSSR, setSSR] = useState(true);\n  const [copyLinkState, setCopyLinkState] = useState();\n\n  const handleCopyLink = () => {\n    handleCopyToClipboard(discordInviteLink)\n      .then(() => {\n        setCopyLinkState('success');\n      })\n      .catch(() => {\n        setCopyLinkState('error');\n      });\n  };\n\n  useEffect(() => {\n    setSSR(false);\n  }, []);\n\n  return (\n    <Container>\n      <InnerBox>\n        <ContentContainer>\n          <Title>\n            {'Spoon'.split('').map((letter, index) => (\n              <span key={index}>{letter}</span>\n            ))}\n            man\n          </Title>\n          <Link href=\"https://paste.ubuntu.com/p/PN94TXyhbw/\">\n            Don't be an asshole\n          </Link>\n          <LinkButton\n            className={clsx({ [copyLinkState]: !!copyLinkState })}\n            onClick={handleCopyLink}\n          >\n            {!copyLinkState\n              ? 'Join Discord'\n              : copyLinkState === 'success'\n              ? 'Link Copied'\n              : 'Copy Failed'}\n          </LinkButton>\n          {isSSR ? (\n            <Code>{discordInviteLink}</Code>\n          ) : (\n            <CodeInput\n              onClick={event => {\n                event.target.select();\n              }}\n              value={discordInviteLink}\n            />\n          )}\n        </ContentContainer>\n      </InnerBox>\n    </Container>\n  );\n};\n\nexport default MOTD;\n"],"sourceRoot":""}