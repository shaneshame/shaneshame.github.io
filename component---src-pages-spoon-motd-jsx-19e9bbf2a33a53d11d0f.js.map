{"version":3,"sources":["webpack:///./src/pages/SpoonMOTD.jsx"],"names":["colors","Container","styled","div","InnerBox","ContentContainer","Title","h1","codeStyles","CodeInput","input","Code","pre","InfoLabel","b","Link","a","Label","label","MOTD","useState","isSSR","setSSR","useEffect","className","split","map","letter","index","key","htmlFor","id","onClick","event","target","select","readOnly","value"],"mappings":"6JAMMA,EAGM,UAHNA,EAKM,UALNA,EAMQ,UANRA,EAOa,UAPbA,EAQG,UARHA,EAWO,UAIPC,EAAYC,IAAOC,IAAV,uEAAGD,CAAH,6MACOF,GAgBhBI,EAAWF,IAAOC,IAAV,sEAAGD,CAAH,6TACEF,EAEeA,EAEpBA,GAqBLK,EAAmBH,IAAOC,IAAV,8EAAGD,CAAH,wGAQhBI,EAAQJ,IAAOK,GAAV,mEAAGL,CAAH,2KAkBLM,EAAU,gCACMR,EADN,gNAaVS,EAAYP,IAAOQ,MAAV,uEAAGR,CAAH,QACXM,GAGEG,EAAOT,IAAOU,IAAV,kEAAGV,CAAH,QACNM,GAGEK,EAAYX,IAAOY,EAAV,uEAAGZ,CAAH,eACJF,GAGLe,EAAOb,IAAOc,EAAV,kEAAGd,CAAH,0EACCF,GAMLiB,EAAQf,IAAOgB,MAAV,mEAAGhB,CAAH,iFA6DIiB,UAtDF,WAAO,IAAD,EACOC,oBAAS,GADhB,WACVC,EADU,KACHC,EADG,KAOjB,OAJAC,qBAAU,WACRD,GAAO,KACN,IAGD,kBAACrB,EAAD,KACE,kBAACG,EAAD,CAAUoB,UAAU,UAClB,kBAACnB,EAAD,KACE,kBAACC,EAAD,KACG,QAAQmB,MAAM,IAAIC,KAAI,SAACC,EAAQC,GAAT,OACrB,0BAAMC,IAAKD,GAAQD,MAFvB,OAMA,kBAACZ,EAAD,4BACA,kBAACE,EAAD,CAAOa,QAAQ,qBACb,kBAACjB,EAAD,gBACCQ,EACC,kBAACV,EAAD,CAAMoB,GAAG,qBAlJG,8BAoJZ,kBAACtB,EAAD,CACEsB,GAAG,oBACHC,QAAS,SAAAC,GACPA,EAAMC,OAAOC,UAEfC,UAAQ,EACRC,MA1JU,gCA8JhB,kBAACpB,EAAD,CAAOa,QAAQ,YACb,kBAACjB,EAAD,kBACCQ,EACC,kBAACV,EAAD,CAAMoB,GAAG,YAlKN,gBAoKH,kBAACtB,EAAD,CACEsB,GAAG,WACHC,QAAS,SAAAC,GACPA,EAAMC,OAAOC,UAEfC,UAAQ,EACRC,MA1KC","file":"component---src-pages-spoon-motd-jsx-19e9bbf2a33a53d11d0f.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst serverIP = '74.91.115.39';\nconst discordInviteLink = 'https://discord.gg/KH866DB';\n\nconst colors = {\n  brown: '#A52A2A',\n  darkBrown: '##661515',\n  darkBlue: '#7289DA',\n  darkBlueHover: '#677BC4',\n  darkGray: '#2F3136',\n  darkerGray: '#17181a',\n  discordBlueLink: '#00B0F4',\n  green: '#008000',\n  darkGreen: '#005900',\n  darkerGreen: '#013301',\n  lightGray: '#36393F',\n  white: '#FFFFFF',\n};\n\nconst Container = styled.div`\n  background-color: ${colors.lightGray};\n  font-family: Tahoma, Geneva, sans-serif;\n  font-size: 16px;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  overflow-y: hidden;\n  position: relative;\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n`;\n\nconst InnerBox = styled.div`\n  background: ${colors.darkGray};\n  border-radius: 10px;\n  box-shadow: 20px 20px 47px ${colors.darkerGray}, -20px -20px 47px #474a52;\n  box-sizing: border-box;\n  color: ${colors.green};\n  height: 400px;\n  opacity: 0;\n  padding: 1em;\n  position: relative;\n  width: 400px;\n  top: 45%;\n  transition: opacity 0.2s ease;\n  transform: translateY(-50%);\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n\n  &.isOpen {\n    opacity: 1;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  position: absolute;\n  text-align: center;\n  left: 50%;\n  top: calc(50% - 0.5em);\n  transform: translate(-50%, -50%);\n`;\n\nconst Title = styled.h1`\n  margin: 0;\n  padding: 0.5em 0 0.5em 0;\n  text-transform: uppercase;\n\n  span {\n    display: inline-block;\n    transition: transform 0.4s ease;\n  }\n\n  &:hover {\n    span {\n      filter: FlipH;\n      transform: scaleX(-1);\n    }\n  }\n`;\n\nconst codeStyles = `\n  background-color: ${colors.darkerGray};\n  border: none;\n  color: inherit;\n  cursor: pointer;\n  font-family: monospace, monospace;\n  font-size: 1rem;\n  line-height: 1.625rem;\n  padding: 0.25rem;\n  text-align: center;\n  width: 16rem;\n`;\n\nconst CodeInput = styled.input`\n  ${codeStyles}\n`;\n\nconst Code = styled.pre`\n  ${codeStyles}\n`;\n\nconst InfoLabel = styled.b`\n  color: ${colors.darkBlue};\n`;\n\nconst Link = styled.a`\n  color: ${colors.discordBlueLink};\n  display: inline-block;\n  margin: 1em 0;\n  text-transform: uppercase;\n`;\n\nconst Label = styled.label`\n  display: block;\n  letter-spacing: 1px;\n  margin: 0.75rem 0;\n  text-transform: uppercase;\n`;\n\nconst MOTD = () => {\n  const [isSSR, setSSR] = useState(true);\n\n  useEffect(() => {\n    setSSR(false);\n  }, []);\n\n  return (\n    <Container>\n      <InnerBox className=\"isOpen\">\n        <ContentContainer>\n          <Title>\n            {'Spoon'.split('').map((letter, index) => (\n              <span key={index}>{letter}</span>\n            ))}\n            man\n          </Title>\n          <Link>Don't be an asshole</Link>\n          <Label htmlFor=\"discordInviteLink\">\n            <InfoLabel>Discord</InfoLabel>\n            {isSSR ? (\n              <Code id=\"discordInviteLink\">{discordInviteLink}</Code>\n            ) : (\n              <CodeInput\n                id=\"discordInviteLink\"\n                onClick={event => {\n                  event.target.select();\n                }}\n                readOnly\n                value={discordInviteLink}\n              />\n            )}\n          </Label>\n          <Label htmlFor=\"serverIP\">\n            <InfoLabel>Server IP</InfoLabel>\n            {isSSR ? (\n              <Code id=\"serverIP\">{serverIP}</Code>\n            ) : (\n              <CodeInput\n                id=\"serverIP\"\n                onClick={event => {\n                  event.target.select();\n                }}\n                readOnly\n                value={serverIP}\n              />\n            )}\n          </Label>\n        </ContentContainer>\n      </InnerBox>\n    </Container>\n  );\n};\n\nexport default MOTD;\n"],"sourceRoot":""}