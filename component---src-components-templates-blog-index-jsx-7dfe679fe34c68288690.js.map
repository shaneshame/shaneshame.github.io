{"version":3,"sources":["webpack:///./src/components/templates/BlogIndex.jsx","webpack:///./node_modules/lodash/range.js","webpack:///./node_modules/lodash/_createRange.js","webpack:///./node_modules/lodash/_baseRange.js","webpack:///./src/components/Pagination/PageButton.jsx","webpack:///./src/components/Pagination/Pagination.jsx","webpack:///./src/components/Pagination/index.js","webpack:///./src/components/PostList/PostListItem.jsx","webpack:///./src/components/PostList/PostList.jsx","webpack:///./src/components/PostList/index.js"],"names":["BlogIndex","data","location","pageContext","site","siteMetadata","pageListSize","title","posts","allMarkdownRemark","edges","isArticle","keywords","path","pageQuery","range","createRange","module","exports","baseRange","isIterateeCall","toFinite","fromRight","start","end","step","undefined","nativeCeil","Math","ceil","nativeMax","max","index","length","result","Array","StyledLink","styled","Link","StyledButton","li","props","active","css","theme","pagination","activeText","activeBack","defaultText","PageButton","children","className","link","to","PageButtonDefault","visible","StyledPagination","nav","pagePath","page","Pagination","listSize","activePage","humanPageNumber","totalPage","numberOfPages","startPage","min","endPage","pathToPrev","previousPagePath","pathToNext","nextPagePath","map","pageNumber","key","PostContainer","div","TextContents","postlistitem","content","info","Thumbnail","Image","Excerpt","p","PostListItem","category","node","frontmatter","cover","date","slug","fields","excerpt","fixed","childImageSharp","PostList","Fragment"],"mappings":"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","file":"component---src-components-templates-blog-index-jsx-7dfe679fe34c68288690.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport PostList from '../PostList';\nimport SEO from '../SEO';\nimport Layout from './Layout';\n\nconst BlogIndex = ({ data, location, pageContext }) => {\n  const { pageListSize, title } = data.site.siteMetadata;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout isArticle location={location} title={title}>\n      <SEO keywords={[`blog`, `gatsby`, `javascript`, `react`]} title=\"Main\" />\n      <PostList\n        data={posts}\n        pageContext={pageContext}\n        pageListSize={pageListSize}\n        path=\"/\"\n      />\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query($limit: Int!, $skip: Int!) {\n    site {\n      siteMetadata {\n        pageListSize\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: $limit\n      skip: $skip\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt(format: MARKDOWN)\n          fields {\n            category\n            slug\n          }\n          frontmatter {\n            cover {\n              childImageSharp {\n                fixed(width: 120, height: 120) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            date(formatString: \"YYYY-MM-DD\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","var createRange = require('./_createRange');\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\n\n\nvar range = createRange();\nmodule.exports = range;","var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\n\n\nfunction createRange(fromRight) {\n  return function (start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    } // Ensure the sign of `-0` is preserved.\n\n\n    start = toFinite(start);\n\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n\n    step = step === undefined ? start < end ? 1 : -1 : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\n\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n\n  return result;\n}\n\nmodule.exports = baseRange;","import { Link } from 'gatsby';\nimport React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  color: inherit;\n  font-weight: bold;\n  padding: 0.5em;\n`;\n\nconst StyledButton = styled.li`\n  border-radius: 3px;\n  display: inline-block;\n  margin: 10px;\n\n  ${props =>\n    props.active\n      ? css`\n          color: ${props => props.theme.pagination.activeText};\n          background-color: ${props => props.theme.pagination.activeBack};\n        `\n      : css`\n          color: ${props => props.theme.pagination.defaultText};\n        `};\n\n  &:hover {\n    color: ${props => props.theme.pagination.activeText};\n    background-color: ${props => props.theme.pagination.activeBack};\n  }\n`;\n\nconst PageButton = ({ active, children, className, link }) => {\n  return (\n    <StyledButton active={active} className={className}>\n      <StyledLink to={link}>{children}</StyledLink>\n    </StyledButton>\n  );\n};\n\nexport default PageButton;\n","import { range } from 'lodash';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport PageButtonDefault from './PageButton';\n\nconst PageButton = styled(PageButtonDefault)`\n  visibility: ${props => (props.visible === false ? 'hidden' : 'visible')};\n`;\n\nconst StyledPagination = styled.nav`\n  margin: 1em auto;\n  text-align: center;\n\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0.5em;\n  }\n`;\n\nconst pagePath = (path, page) => {\n  return page > 1 ? `${path}${page}` : path;\n};\n\nconst Pagination = ({ listSize, pageContext, path }) => {\n  const activePage = pageContext.humanPageNumber;\n  const totalPage = pageContext.numberOfPages;\n\n  const startPage = Math.max(\n    1,\n    Math.min(activePage, totalPage - (listSize - 1))\n  );\n  const endPage = Math.min(startPage + listSize - 1, totalPage);\n\n  const pathToPrev = pageContext.previousPagePath || '/';\n  const pathToNext =\n    pageContext.nextPagePath || `/${pageContext.numberOfPages}`;\n\n  return (\n    <StyledPagination>\n      <ul>\n        <PageButton link={pathToPrev} visible={activePage !== 1}>\n          <i className=\"fas fa-chevron-left\" />\n        </PageButton>\n        {range(startPage, endPage + 1).map(pageNumber => (\n          <PageButton\n            active={pageNumber === activePage}\n            key={pageNumber}\n            link={pagePath(path, pageNumber)}\n          >\n            {pageNumber}\n          </PageButton>\n        ))}\n        <PageButton link={pathToNext} visible={activePage !== totalPage}>\n          <i className=\"fas fa-chevron-right\" />\n        </PageButton>\n      </ul>\n    </StyledPagination>\n  );\n};\n\nexport default Pagination;\n","import Pagination from './Pagination';\n\nexport default Pagination;\n","import { Link } from 'gatsby';\nimport Image from 'gatsby-image';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { PostInfo } from '../common';\n\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 40px;\n`;\n\nconst TextContents = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 20px;\n\n  h2 {\n    border-bottom: none;\n    color: ${props => props.theme.postlistitem.title};\n    margin: 0;\n    margin-bottom: 5px;\n    padding-bottom: 0;\n\n    span {\n      height: 100%;\n    }\n  }\n\n  span:nth-child(2) {\n    color: ${props => props.theme.postlistitem.content};\n  }\n\n  div {\n    color: ${props => props.theme.postlistitem.info};\n\n    #circle {\n      background-color: ${props => props.theme.postlistitem.info};\n    }\n  }\n`;\n\nconst Thumbnail = styled(Image)`\n  border-radius: 10px;\n  height: 120px;\n  width: 120px;\n`;\n\nconst Excerpt = styled.p`\n  color: ${props => props.theme.postlistitem.content};\n  margin: 0;\n`;\n\nconst PostListItem = ({ category, node }) => {\n  const { cover, date, title } = node.frontmatter;\n  const { slug } = node.fields;\n\n  return (\n    <PostContainer to={slug}>\n      <TextContents>\n        <Link to={slug}>\n          <h2>{title}</h2>\n          <Excerpt>{node.excerpt}</Excerpt>\n        </Link>\n        <PostInfo category={category} date={date} link />\n      </TextContents>\n      {!!cover && (\n        <div>\n          <Link to={slug}>\n            <Thumbnail fixed={cover.childImageSharp.fixed} />\n          </Link>\n        </div>\n      )}\n    </PostContainer>\n  );\n};\n\nexport default PostListItem;\n","import React from 'react';\n\nimport Pagination from '../Pagination';\nimport PostListItem from './PostListItem';\n\nconst PostList = ({ data, pageContext, pageListSize, path }) => {\n  return (\n    <React.Fragment>\n      {data.map(({ node }) => (\n        <PostListItem\n          category={node.fields.category}\n          key={node.fields.slug}\n          node={node}\n        />\n      ))}\n      {pageContext && (\n        <Pagination\n          listSize={pageListSize}\n          pageContext={pageContext}\n          path={path}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default PostList;\n","import PostList from './PostList';\n\nexport default PostList;\n"],"sourceRoot":""}